{
	"info": {
		"_postman_id": "00d1b2c9-5cca-4afc-a8cf-3f9203a29a8d",
		"name": "Automation Sign In",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20098857"
	},
	"item": [
		{
			"name": "Valid user is able to sign in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//get the token from the response body\r",
							"var jsonData=JSON.parse(responseBody);\r",
							"pm.environment.set(\"capture_Token\",jsonData.token);\r",
							"\r",
							"\r",
							"pm.test(\"As a Valid user, I should be able to log in successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"User sign in should be less than 100 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"User sign in should be less than 800 ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"//Verify the header server information\r",
							"pm.test(\"Response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\");\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"token\");\r",
							"});\r",
							"\r",
							"\r",
							"//Schema validation\r",
							"/*\r",
							"* copy the response body \r",
							"* explore jsonschema.net\r",
							"* sign up with google\r",
							"* paste on the left side\r",
							"* click on the submit button\r",
							"* copy the schema from the top right corner\r",
							"* paste it on the test sction\r",
							"*/\r",
							"\r",
							"var schema_Validation= {\r",
							"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"default\": {},\r",
							"    \"title\": \"Root Schema\",\r",
							"    \"required\": [\r",
							"        \"token\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"token\": {\r",
							"            \"type\": \"string\",\r",
							"            \"default\": \"\",\r",
							"            \"title\": \"The token Schema\",\r",
							"            \"examples\": [\r",
							"                \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MzFjYmZiYzRhMTRjMGI3MDk1ODUyYTYiLCJyb2xlIjoidXNlciIsImVtYWlsIjoiZmFobWlkazEyMkBnbWFpbC5jb20iLCJpYXQiOjE2NjM0Mjk2NzksImV4cCI6MTY2MzUxNjA3OX0.wxkwIItFvTBVDAHPN4IekyDccDk6xo-U9EDbBOPTl94\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"examples\": [{\r",
							"        \"token\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MzFjYmZiYzRhMTRjMGI3MDk1ODUyYTYiLCJyb2xlIjoidXNlciIsImVtYWlsIjoiZmFobWlkazEyMkBnbWFpbC5jb20iLCJpYXQiOjE2NjM0Mjk2NzksImV4cCI6MTY2MzUxNjA3OX0.wxkwIItFvTBVDAHPN4IekyDccDk6xo-U9EDbBOPTl94\"\r",
							"    }]\r",
							"};\r",
							"\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(jsonData, schema_Validation)).to.be.true;\r",
							"    \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MzFjYmZiYzRhMTRjMGI3MDk1ODUyYTYiLCJyb2xlIjoidXNlciIsImVtYWlsIjoiZmFobWlkazEyMkBnbWFpbC5jb20iLCJpYXQiOjE2NjI4Mjg1NDAsImV4cCI6MTY2MjkxNDk0MH0.P1VzDQuZlV27YZGjYsGC6VcWOQ8U1-EVcMESJsv8JzM"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"password\": \"23232323\",\n  \"email\": \"fahmidk122@gmail.com\"\n}"
				},
				"url": {
					"raw": "https://staging-be-ecom.techserve4u.com/api/user/signin",
					"protocol": "https",
					"host": [
						"staging-be-ecom",
						"techserve4u",
						"com"
					],
					"path": [
						"api",
						"user",
						"signin"
					]
				}
			},
			"response": []
		},
		{
			"name": "4-Verify a user valid token https://staging-be-ecom.techserve4u.com/api/user/verify",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "authorization",
						"value": "{{capture_Token}}"
					}
				],
				"url": {
					"raw": "https://staging-be-ecom.techserve4u.com/api/user/verify",
					"protocol": "https",
					"host": [
						"staging-be-ecom",
						"techserve4u",
						"com"
					],
					"path": [
						"api",
						"user",
						"verify"
					]
				}
			},
			"response": []
		}
	]
}